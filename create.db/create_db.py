import sqlite3
import os

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DB_PATH = '/root/telegram_watcher/telegram_bot/create.db/db/event_status.db'


def create_db():
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –±–∞–∑—É, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if os.path.exists(DB_PATH):
        os.remove(DB_PATH)

    conn = sqlite3.connect(DB_PATH)
    c = conn.cursor()

    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
    c.execute(''' 
        CREATE TABLE IF NOT EXISTS status (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            status TEXT NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —Å–æ–±—ã—Ç–∏–π
    c.execute(''' 
        CREATE TABLE IF NOT EXISTS events (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            source TEXT NOT NULL,          -- Yas Island / Etihad / Ticketmaster
            title TEXT NOT NULL,
            description TEXT,
            link_text TEXT,
            link_url TEXT,
            event_date TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')

    # –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—è updated_at –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ status
    c.execute('''
        CREATE TRIGGER IF NOT EXISTS update_status_updated_at
        AFTER UPDATE ON status
        FOR EACH ROW
        BEGIN
            UPDATE status
            SET updated_at = CURRENT_TIMESTAMP
            WHERE id = OLD.id;
        END;
    ''')

    # –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—è updated_at –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ events
    c.execute('''
        CREATE TRIGGER IF NOT EXISTS update_events_updated_at
        AFTER UPDATE ON events
        FOR EACH ROW
        BEGIN
            UPDATE events
            SET updated_at = CURRENT_TIMESTAMP
            WHERE id = OLD.id;
        END;
    ''')

    # –ü—Ä–∏–º–µ—Ä –≤—Å—Ç–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    c.execute("INSERT INTO status (status) VALUES (?)", ("–¢–µ—Å—Ç–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å",))

    conn.commit()
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã, —Ç—Ä–∏–≥–≥–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞!")

    # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å –∏–∑ status
    c.execute("SELECT id, status, created_at, updated_at FROM status ORDER BY id DESC LIMIT 1")
    row = c.fetchone()
    print(f"üìã –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å –≤ —Å—Ç–∞—Ç—É—Å–µ: ID={row[0]}, –°—Ç–∞—Ç—É—Å='{row[1]}', –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è={row[2]}, –î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è={row[3]}")

    conn.close()


if __name__ == '__main__':
    create_db()


